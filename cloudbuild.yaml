steps:
  # Step to build the base image
  - name: 'eu.gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'eu.gcr.io/$PROJECT_ID/base', '-f', './dockerfiles/base.dockerfile', '.']
    
  #Step to build the train image
  - name: 'eu.gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'eu.gcr.io/$PROJECT_ID/train:latest', '-f', './dockerfiles/trainer.dockerfile','--build-arg','BASE_IMAGE=eu.gcr.io/$PROJECT_ID/base', '.']
  # Step to push the image to Google Container Registry
  - name: 'eu.gcr.io/cloud-builders/docker'
    args: ['push', 'eu.gcr.io/$PROJECT_ID/train:latest']

    # Build the deploy container
#  - name: 'gcr.io/cloud-builders/docker'
#    args: ['build','-t', 'eu.gcr.io/$PROJECT_ID/mlops-tinystories:deploy','-f', 'dockerfiles/deploy.dockerfile', '--build-arg', 'BASE_IMAGE=eu.gcr.io/$PROJECT_ID/base', '.']

    # Push the deploy container
#  - name: 'gcr.io/cloud-builders/docker'
#    args: ['push', 'eu.gcr.io/$PROJECT_ID/mlops-tinystories:deploy']

# Define the source location in your repository
# Replace 'your-repository-name' and 'path/to/dockerfile' as needed
source:
  repoSource:
    repoName: 'MLOPS-TINYSTORIES'
    branchName: 'production'  # You can specify a branch, tag, or commit
    dir: 'dockerfiles'  # Directory where the Dockerfile is located

# Define substitutions, like project ID
substitutions:
  _PROJECT_ID: 'tinystories-mlops'

# Specify images to be stored in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/base'